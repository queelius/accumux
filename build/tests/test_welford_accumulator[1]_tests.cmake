add_test([=[WelfordAccumulatorTest.DefaultConstructor]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.DefaultConstructor]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.DefaultConstructor]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.ValueConstructor]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.ValueConstructor]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.ValueConstructor]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.CopyConstructor]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.CopyConstructor]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.CopyConstructor]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.AddingSingleValues]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.AddingSingleValues]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.AddingSingleValues]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.VarianceCalculation]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.VarianceCalculation]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.VarianceCalculation]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.FloatingPointValues]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.FloatingPointValues]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.FloatingPointValues]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.NegativeValues]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.NegativeValues]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.NegativeValues]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.MixedSignValues]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.MixedSignValues]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.MixedSignValues]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.SampleVsPopulationVariance]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.SampleVsPopulationVariance]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.SampleVsPopulationVariance]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.SingleValueSampleVariance]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.SingleValueSampleVariance]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.SingleValueSampleVariance]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.EmptyAccumulatorEdgeCases]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.EmptyAccumulatorEdgeCases]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.EmptyAccumulatorEdgeCases]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.LargeNumbers]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.LargeNumbers]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.LargeNumbers]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.ManySmallValues]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.ManySmallValues]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.ManySmallValues]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.KBNWelfordAlias]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.KBNWelfordAlias]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.KBNWelfordAlias]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.StandaloneFunctions]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.StandaloneFunctions]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.StandaloneFunctions]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.DifferentAccumulatorTypes]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.DifferentAccumulatorTypes]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.DifferentAccumulatorTypes]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.NumericalPrecision]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.NumericalPrecision]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.NumericalPrecision]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.RandomValuesStressTest]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.RandomValuesStressTest]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.RandomValuesStressTest]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.IncrementalCalculation]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.IncrementalCalculation]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.IncrementalCalculation]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.MoveSemanticsInDelta2]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.MoveSemanticsInDelta2]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.MoveSemanticsInDelta2]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[WelfordAccumulatorTest.IdenticalValues]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_welford_accumulator [==[--gtest_filter=WelfordAccumulatorTest.IdenticalValues]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[WelfordAccumulatorTest.IdenticalValues]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set(  test_welford_accumulator_TESTS WelfordAccumulatorTest.DefaultConstructor WelfordAccumulatorTest.ValueConstructor WelfordAccumulatorTest.CopyConstructor WelfordAccumulatorTest.AddingSingleValues WelfordAccumulatorTest.VarianceCalculation WelfordAccumulatorTest.FloatingPointValues WelfordAccumulatorTest.NegativeValues WelfordAccumulatorTest.MixedSignValues WelfordAccumulatorTest.SampleVsPopulationVariance WelfordAccumulatorTest.SingleValueSampleVariance WelfordAccumulatorTest.EmptyAccumulatorEdgeCases WelfordAccumulatorTest.LargeNumbers WelfordAccumulatorTest.ManySmallValues WelfordAccumulatorTest.KBNWelfordAlias WelfordAccumulatorTest.StandaloneFunctions WelfordAccumulatorTest.DifferentAccumulatorTypes WelfordAccumulatorTest.NumericalPrecision WelfordAccumulatorTest.RandomValuesStressTest WelfordAccumulatorTest.IncrementalCalculation WelfordAccumulatorTest.MoveSemanticsInDelta2 WelfordAccumulatorTest.IdenticalValues)
