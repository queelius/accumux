add_test([=[UtilityCoverageTest.KBNSumAbsFunction]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_utility_coverage [==[--gtest_filter=UtilityCoverageTest.KBNSumAbsFunction]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UtilityCoverageTest.KBNSumAbsFunction]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UtilityCoverageTest.KBNSumFloatBranchCoverage]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_utility_coverage [==[--gtest_filter=UtilityCoverageTest.KBNSumFloatBranchCoverage]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UtilityCoverageTest.KBNSumFloatBranchCoverage]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UtilityCoverageTest.WelfordUtilityFunctions]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_utility_coverage [==[--gtest_filter=UtilityCoverageTest.WelfordUtilityFunctions]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UtilityCoverageTest.WelfordUtilityFunctions]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UtilityCoverageTest.WelfordValueConstructor]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_utility_coverage [==[--gtest_filter=UtilityCoverageTest.WelfordValueConstructor]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UtilityCoverageTest.WelfordValueConstructor]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UtilityCoverageTest.KBNSumEvalMethod]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_utility_coverage [==[--gtest_filter=UtilityCoverageTest.KBNSumEvalMethod]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UtilityCoverageTest.KBNSumEvalMethod]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UtilityCoverageTest.KBNSumScalarComparison]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_utility_coverage [==[--gtest_filter=UtilityCoverageTest.KBNSumScalarComparison]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UtilityCoverageTest.KBNSumScalarComparison]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UtilityCoverageTest.KBNSumValueAssignment]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_utility_coverage [==[--gtest_filter=UtilityCoverageTest.KBNSumValueAssignment]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UtilityCoverageTest.KBNSumValueAssignment]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UtilityCoverageTest.ExtremePrecisionCases]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_utility_coverage [==[--gtest_filter=UtilityCoverageTest.ExtremePrecisionCases]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UtilityCoverageTest.ExtremePrecisionCases]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UtilityCoverageTest.WelfordEdgeCases]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_utility_coverage [==[--gtest_filter=UtilityCoverageTest.WelfordEdgeCases]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UtilityCoverageTest.WelfordEdgeCases]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UtilityCoverageTest.KBNWelfordTypeAlias]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_utility_coverage [==[--gtest_filter=UtilityCoverageTest.KBNWelfordTypeAlias]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UtilityCoverageTest.KBNWelfordTypeAlias]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test([=[UtilityCoverageTest.ZeroAndNegativeOperations]=]  /home/spinoza/github/alpha/algebraic_reducers/build/tests/test_utility_coverage [==[--gtest_filter=UtilityCoverageTest.ZeroAndNegativeOperations]==] --gtest_also_run_disabled_tests)
set_tests_properties([=[UtilityCoverageTest.ZeroAndNegativeOperations]=]  PROPERTIES WORKING_DIRECTORY /home/spinoza/github/alpha/algebraic_reducers/build/tests SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set(  test_utility_coverage_TESTS UtilityCoverageTest.KBNSumAbsFunction UtilityCoverageTest.KBNSumFloatBranchCoverage UtilityCoverageTest.WelfordUtilityFunctions UtilityCoverageTest.WelfordValueConstructor UtilityCoverageTest.KBNSumEvalMethod UtilityCoverageTest.KBNSumScalarComparison UtilityCoverageTest.KBNSumValueAssignment UtilityCoverageTest.ExtremePrecisionCases UtilityCoverageTest.WelfordEdgeCases UtilityCoverageTest.KBNWelfordTypeAlias UtilityCoverageTest.ZeroAndNegativeOperations)
