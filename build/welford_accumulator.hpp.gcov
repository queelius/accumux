        -:    0:Source:/home/spinoza/github/alpha/algebraic_reducers/welford_accumulator.hpp
        -:    1:#pragma once
        -:    2:
        -:    3:#include "kbn_sum.hpp"
        -:    4:
        -:    5:namespace algebraic_accumulators
        -:    6:{
        -:    7:    template <typename A>
        -:    8:    struct welford_accumulator
        -:    9:    {
        -:   10:        using value_type = typename A::value_type;
        -:   11:
       24:   12:        welford_accumulator() : count(0), mu(), M2() {}
------------------
_ZN22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEEC2Ev:
       19:   12:        welford_accumulator() : count(0), mu(), M2() {}
------------------
_ZN22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEEC2Ev:
        2:   12:        welford_accumulator() : count(0), mu(), M2() {}
------------------
_ZN22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEEC2Ev:
        3:   12:        welford_accumulator() : count(0), mu(), M2() {}
------------------
        -:   13:        
        3:   14:        explicit welford_accumulator(value_type a) : count(0), mu(), M2()
        3:   15:            { operator+=(a); }
------------------
_ZN22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEEC2Ed:
        2:   14:        explicit welford_accumulator(value_type a) : count(0), mu(), M2()
        2:   15:            { operator+=(a); }
------------------
_ZN22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEEC2Ed:
        1:   14:        explicit welford_accumulator(value_type a) : count(0), mu(), M2()
        1:   15:            { operator+=(a); }
------------------
        -:   16:
        -:   17:        explicit welford_accumulator(welford_accumulator const &) = default;
        -:   18:
       27:   19:        auto variance() const { return value_type(M2) / value_type(count); }
------------------
_ZNK22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEE8varianceEv:
       23:   19:        auto variance() const { return value_type(M2) / value_type(count); }
------------------
_ZNK22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEE8varianceEv:
        4:   19:        auto variance() const { return value_type(M2) / value_type(count); }
------------------
       11:   20:        auto sample_variance() const { return value_type(M2) / (value_type(count - 1)); }
------------------
_ZNK22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEE15sample_varianceEv:
        8:   20:        auto sample_variance() const { return value_type(M2) / (value_type(count - 1)); }
------------------
_ZNK22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEE15sample_varianceEv:
        3:   20:        auto sample_variance() const { return value_type(M2) / (value_type(count - 1)); }
------------------
       35:   21:        auto mean() const { return value_type(mu); }
------------------
_ZNK22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEE4meanEv:
       27:   21:        auto mean() const { return value_type(mu); }
------------------
_ZNK22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEE4meanEv:
        2:   21:        auto mean() const { return value_type(mu); }
------------------
_ZNK22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEE4meanEv:
        6:   21:        auto mean() const { return value_type(mu); }
------------------
       23:   22:        auto sum() const { return value_type(mu) * value_type(count); }
------------------
_ZNK22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEE3sumEv:
       17:   22:        auto sum() const { return value_type(mu) * value_type(count); }
------------------
_ZNK22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEE3sumEv:
        6:   22:        auto sum() const { return value_type(mu) * value_type(count); }
------------------
       16:   23:        auto size() const { return count; }
------------------
_ZNK22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEE4sizeEv:
       11:   23:        auto size() const { return count; }
------------------
_ZNK22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEE4sizeEv:
        1:   23:        auto size() const { return count; }
------------------
_ZNK22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEE4sizeEv:
        4:   23:        auto size() const { return count; }
------------------
        3:   24:        operator value_type() const { return sum(); }
------------------
_ZNK22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEEcvdEv:
        2:   24:        operator value_type() const { return sum(); }
------------------
_ZNK22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEEcvdEv:
        1:   24:        operator value_type() const { return sum(); }
------------------
        -:   25:
    12167:   26:        auto & operator+=(value_type x)
        -:   27:        {
    12167:   28:            ++count;
    12167:   29:            auto delta = x - mu;
    12167:   30:            mu += delta / count;
    12167:   31:            auto delta2 = std::move(x) - mu;
    12167:   32:            M2 += delta * delta2;
    12167:   33:            return *this;
        -:   34:        }
------------------
_ZN22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEEpLEd:
    12152:   26:        auto & operator+=(value_type x)
        -:   27:        {
    12152:   28:            ++count;
    12152:   29:            auto delta = x - mu;
    12152:   30:            mu += delta / count;
    12152:   31:            auto delta2 = std::move(x) - mu;
    12152:   32:            M2 += delta * delta2;
    12152:   33:            return *this;
        -:   34:        }
------------------
_ZN22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEEpLEd:
        3:   26:        auto & operator+=(value_type x)
        -:   27:        {
        3:   28:            ++count;
        3:   29:            auto delta = x - mu;
        3:   30:            mu += delta / count;
        3:   31:            auto delta2 = std::move(x) - mu;
        3:   32:            M2 += delta * delta2;
        3:   33:            return *this;
        -:   34:        }
------------------
_ZN22algebraic_accumulators19welford_accumulatorIN21algebraic_accumulator7kbn_sumIdEEEpLEd:
       12:   26:        auto & operator+=(value_type x)
        -:   27:        {
       12:   28:            ++count;
       12:   29:            auto delta = x - mu;
       12:   30:            mu += delta / count;
       12:   31:            auto delta2 = std::move(x) - mu;
       12:   32:            M2 += delta * delta2;
       12:   33:            return *this;
        -:   34:        }
------------------
        -:   35:
        -:   36:        unsigned int count;
        -:   37:        A mu, M2;
        -:   38:    };
        -:   39:
        -:   40:    template <typename T>
        -:   41:    using kbn_welford_accumulate = welford_accumulator<algebraic_accumulator::kbn_sum<T>>;
        -:   42:
        -:   43:    template <typename A>
        2:   44:    auto mean(welford_accumulator<A> const & acc)
        -:   45:    {
        2:   46:        return acc.mean();
        -:   47:    }
------------------
_ZN22algebraic_accumulators4meanIN21algebraic_accumulator7kbn_sumIdEEEEDaRKNS_19welford_accumulatorIT_EE:
        1:   44:    auto mean(welford_accumulator<A> const & acc)
        -:   45:    {
        1:   46:        return acc.mean();
        -:   47:    }
------------------
_ZN22algebraic_accumulators4meanIN21algebraic_accumulator7kbn_sumIdEEEEDaRKNS_19welford_accumulatorIT_EE:
        1:   44:    auto mean(welford_accumulator<A> const & acc)
        -:   45:    {
        1:   46:        return acc.mean();
        -:   47:    }
------------------
        -:   48:
        -:   49:    template <typename A>
        2:   50:    auto variance(welford_accumulator<A> const & acc)
        -:   51:    {
        2:   52:        return acc.variance();
        -:   53:    }
------------------
_ZN22algebraic_accumulators8varianceIN21algebraic_accumulator7kbn_sumIdEEEEDaRKNS_19welford_accumulatorIT_EE:
        1:   50:    auto variance(welford_accumulator<A> const & acc)
        -:   51:    {
        1:   52:        return acc.variance();
        -:   53:    }
------------------
_ZN22algebraic_accumulators8varianceIN21algebraic_accumulator7kbn_sumIdEEEEDaRKNS_19welford_accumulatorIT_EE:
        1:   50:    auto variance(welford_accumulator<A> const & acc)
        -:   51:    {
        1:   52:        return acc.variance();
        -:   53:    }
------------------
        -:   54:
        -:   55:    template <typename A>
        2:   56:    auto sample_variance(welford_accumulator<A> const & acc)
        -:   57:    {
        2:   58:        return acc.sample_variance();
        -:   59:    }
------------------
_ZN22algebraic_accumulators15sample_varianceIN21algebraic_accumulator7kbn_sumIdEEEEDaRKNS_19welford_accumulatorIT_EE:
        1:   56:    auto sample_variance(welford_accumulator<A> const & acc)
        -:   57:    {
        1:   58:        return acc.sample_variance();
        -:   59:    }
------------------
_ZN22algebraic_accumulators15sample_varianceIN21algebraic_accumulator7kbn_sumIdEEEEDaRKNS_19welford_accumulatorIT_EE:
        1:   56:    auto sample_variance(welford_accumulator<A> const & acc)
        -:   57:    {
        1:   58:        return acc.sample_variance();
        -:   59:    }
------------------
        -:   60:
        -:   61:    template <typename A>
        2:   62:    auto size(welford_accumulator<A> const & acc)
        -:   63:    {
        2:   64:        return acc.size();
        -:   65:    }
------------------
_ZN22algebraic_accumulators4sizeIN21algebraic_accumulator7kbn_sumIdEEEEDaRKNS_19welford_accumulatorIT_EE:
        1:   62:    auto size(welford_accumulator<A> const & acc)
        -:   63:    {
        1:   64:        return acc.size();
        -:   65:    }
------------------
_ZN22algebraic_accumulators4sizeIN21algebraic_accumulator7kbn_sumIdEEEEDaRKNS_19welford_accumulatorIT_EE:
        1:   62:    auto size(welford_accumulator<A> const & acc)
        -:   63:    {
        1:   64:        return acc.size();
        -:   65:    }
------------------
        -:   66:
        -:   67:    template <typename A>
        2:   68:    auto sum(welford_accumulator<A> const & acc)
        -:   69:    {
        2:   70:        return acc.sum();
        -:   71:    }
        -:   72:
        -:   73:}
